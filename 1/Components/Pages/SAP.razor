@page "/SAP"
@using _1.Components.Layout
@using _1.Components.Charts
@inherits LayoutComponentBase
@inject NavigationManager NavManager
@rendermode InteractiveServer
<PageTitle>SAP EAM</PageTitle>

<div class="container-fluid vh-100 d-flex flex-column overflow-hidden" style="height: 100%;">
    <!-- Main Content -->
    <div class="mb-0" style="height: 3%;">
        <NavBar />
    </div>
    <div class="row flex-1 h-100 p-5" style="height: 95%;">
        <!-- Side Section -->
        <div class="col-1 d-flex flex-column p-0" style="height: 100%;">
            @* <div id="side-card-1" class="card mb-2 flex-fill" style="height: 20%; width: 180px;">
                <div class="card-body">
                    <!-- Side Card 1 Content -->
                </div>
            </div> *@
            <div id="side-card-2" class="card mb-1" style="height: 500px; width: 180px;">
                <div class="card-headerR text-center p-2">
                    <div class="header-text">Workcell</div>
                </div>
                <div class="card-body d-flex flex-column align-items-center gap-1 p-1 overflow-auto side-nav">
                    <!-- Buttons -->
                    <div class="d-grid gap-1">
                        @foreach (var buttonLabel in ButtonLabels)
                        {
                            <button class="btn btn-outline-primary" @onclick="() => UpdateDataKey(buttonLabel)">
                                @buttonLabel
                            </button>
                        }
                    </div>

                </div>
            </div>
            <div id="side-card-2" class="card mb-1" style="height: 250px; width: 180px;">
                <div class="card-headerR text-center p-2">
                    <div class="header-text">Brand</div>
                </div>
                <div class="card-body d-flex flex-column align-items-center gap-1 p-1 overflow-auto side-nav">
                    <!-- Buttons -->
                    <div class="d-grid gap-1">
                        @foreach (var buttonLabel in ButtonBrand)
                        {
                            <button class="btn btn-outline-primary" @onclick="() => UpdateDataNavKey(buttonLabel)">
                                @buttonLabel
                            </button>
                        }
                    </div>

                </div>
            </div>
           
            <div id="side-card-2" class="card" style="height: 150px; width: 180px;">
                <div class="card-headerR text-center p-2">
                    <div class="header-text">Torque Range</div>
                </div>
                <div class="card-body d-flex flex-column align-items-center gap-1 p-1 overflow-auto side-nav">
                    <!-- Buttons -->
                    <div class="d-grid gap-1">

                        <button class="btn btn-outline-primary" @onclick="() => RangeNav()">
                            Overall
                        </button>


                    </div>

                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="col d-flex flex-column" style="height: 100%; overflow-y: auto; ">


            <div class="row g-2" style="flex: 0 0 12%;">
                <div class="col-12">
                    <div id="card-1" class="card p-0" style="height: 100%;">
                        <div class="card-headerR text-center p-2 m-0">
                            <div class="header-text">@selectedKey SAP EAM Data</div>
                        </div>
                        <div class="card-body p-3 m-0" style="overflow-y: auto; height: 100%;">
                            <SapTable />
                        </div>

                    </div>
                </div>
            </div>


        </div>
    </div>
</div>


@if (showNotification)
{
    <div class="sticky-lg-bottom">
        <div class="scrolling-text">
            Welcome to Smart Torque One-Center! Workcell details for Advantest DF, Fortive, Cohu, Gas Box, Lam Mec, and
            Micron SIG are in progress. Contact SME: Chanop/Syed. Thank you!!!
        </div>
    </div>
}

@code {
    private bool showWorkcell = false;
    private bool showNotification = false;

    private string selectedKey = ""; // Default dataset
    private List<string> ButtonLabels = new() { "Overall", "Onto", "Beckman Coulter","Becton Dickinson","Advantest DF",
"Fortive", "Cohu","Gas Box", "Lam Mec", "Micron SIG" };
    private List<string> ButtonBrand = new() { "Overall", "Hantas", "Desoutter", "Sehan" };
    private List<string> ButtonRange = new() { "Overall" };

    private string? ChildSelectedWorkcell = null;

    private void OnRowClicked(string workcellName)
    {
        ChildSelectedWorkcell = workcellName; // Update child dynamically
        Console.WriteLine($"Row clicked: {workcellName}");
    }
    private void UpdateDataKey(string key)
    {
        ChildSelectedWorkcell = "";
        NavManager.NavigateTo($"/?selectedKey={key}");
        selectedKey = key; // Update the dataset key

    }
    private void PlantNav(string key)
    {
        ChildSelectedWorkcell = "";
        NavManager.NavigateTo($"/plant?selectedKey={key}");
        selectedKey = key; // Update the dataset key

    }
    private void UpdateDataNavKey(string key)
    {
        if (key == "Overall")
        {
            key = "Brand";
        }
        ChildSelectedWorkcell = "";
        NavManager.NavigateTo($"/newpage?selectedKey={key}");
        selectedKey = key; // Update the dataset key
    }
    public void RangeNav()
    {
        NavManager.NavigateTo($"/range");
    }
    private void ShowWorkcell()
    {
        showWorkcell = true;
    }

    private void ShowPlant()
    {
        showWorkcell = false;
    }

    protected override void OnInitialized()
    {
        // Run the timer logic in a separate task
        Task.Run(() => ToggleNotificationAsync());
        // Parse query parameters
        var uri = new Uri(NavManager.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);

        // Get the selectedKey parameter, defaulting to "Overall" if it's not provided
        selectedKey = query["selectedKey"] ?? "Overall";
    }

    private async Task ToggleNotificationAsync()
    {
        while (true)
        {
            showNotification = true; // Show the notification
            InvokeAsync(StateHasChanged); // Safely notify Blazor of state change

            await Task.Delay(20000); // Keep the notification visible for 10 seconds
            showNotification = false; // Hide the notification
            InvokeAsync(StateHasChanged); // Safely notify Blazor of state change

            await Task.Delay(10000); // Wait for 10 seconds before showing again
        }
    }


    private string GetContent(int cardNumber)
    {
        return selectedKey switch
        {
            "Overall" => cardNumber switch
            {
                1 => "251",
                2 => "245",
                3 => "6",
                _ => "Default Content"
            },
            "Advantest DF" => cardNumber switch
            {
                1 => "15",
                2 => "15",
                3 => "0",
                _ => "Default Content"
            },
            "Fortive" => cardNumber switch
            {
                1 => "9",
                2 => "9",
                3 => "0",
                _ => "Default Content"
            },
            "Gas Box" => cardNumber switch
            {
                1 => "8",
                2 => "8",
                3 => "0",
                _ => "Default Content"
            },
            "Lam Mec" => cardNumber switch
            {
                1 => "163",
                2 => "163",
                3 => "0",
                _ => "Default Content"
            },
            "Beckman Coulter" => cardNumber switch
            {
                1 => "2",
                2 => "2",
                3 => "0",
                _ => "Default Content"
            },
            "Micron SIG" => cardNumber switch
            {
                1 => "35",
                2 => "35",
                3 => "0",
                _ => "Default Content"
            },
            "Becton Dickinson" => cardNumber switch
            {
                1 => "5",
                2 => "5",
                3 => "0",
                _ => "Default Content"
            },
            "Onto" => cardNumber switch
            {
                1 => "6",
                2 => "0",
                3 => "6",
                _ => "Default Content"
            },
            "Cohu" => cardNumber switch
            {
                1 => "8",
                2 => "8",
                3 => "0",
                _ => "Default Content"
            },
            _ => "Default Content"
        };
    }

}


<style>
    .header-text {
        font-size: 1.5rem;
        font-weight: bold;
        color: white;
    }

    .body-text {
        font-size: 3rem;
        /* Smaller font size for body */
    }

    .card-header,
    .card-body {
        padding: 0;
        margin: 0;
    }

    .card-header {
        background-color: coral;
        border-bottom: solid 1px black;
        font-size: 1.5rem;
        font-weight: bold;
    }

    .card-headerA {
        background-color: rgb(53, 128, 240);
        border-bottom: solid 1px black;


    }

    .card-headerB {
        background-color: rgb(26, 175, 0);
        border-bottom: solid 1px black;
    }

    .card-headerC {
        background-color: rgb(252, 104, 78);
        border-bottom: solid 1px black;
    }

    .card-headerR {
        background-color: rgb(0, 20, 118);
        border-bottom: solid 1px black;
        font-size: 1.5rem;
        font-weight: bold;
    }

    .side-nav {

        overflow: scroll;
    }

    .sticky-lg-bottom {


        position: absolute;
        bottom: 0;
        left: 0;
        /* Ensure it starts at the very left of the screen */
        width: 100vw;
        /* Full viewport width */
        margin: 0;
        /* Remove any default margins */
        padding: 0;
        /* Remove any padding */
        z-index: 1000;
        /* Ensure it stays on top */
    }

    .btn {
        min-width: 150px;
    }

    .table {
        width: 100%;
        height: auto;
        table-layout: auto;
        /* Allows flexible column widths */
    }

    .card-body {
        height: 100%;
        overflow-y: auto;
    }
</style>
