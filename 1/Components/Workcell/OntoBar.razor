@page "/Bar"
@rendermode InteractiveServer

@* <Button OnClick=DataUri BackgroundColor="TablerColor.Primary">Chart Image</Button> *@

<ApexChart @ref=chart TItem="MyData" Title="" Width="500" Height="220" Options=options>
    <ApexPointSeries TItem="MyData" Items="Data" Name="Total" SeriesType="SeriesType.Bar" XValue="e => e.Workcell"
        YValue="e=> e.Total" ShowDataLabels/>
    <ApexPointSeries TItem="MyData" Items="Data" Name="In Used" SeriesType="SeriesType.Bar" XValue="e => e.Workcell"
        YValue="e=> e.Active" ShowDataLabels/>
    <ApexPointSeries TItem="MyData" Items="Data" Name="Not In Used" SeriesType="SeriesType.Bar" XValue="e => e.Workcell"
        YValue="e=> e.Inactive" ShowDataLabels/>
</ApexChart>

@if (!string.IsNullOrWhiteSpace(dataUri))
{
    <ModalView OnClosed=ModalClosed>
        <img src=@dataUri />
    </ModalView>
}


@code {
    private List<MyData> Data { get; set; } = new();
    private ApexChart<MyData> chart;
    private ApexChartOptions<MyData> options { get; set; } = new();
    private string dataUri;

    public class MyData
    {
        public string Workcell { get; set; }
        public int Total { get; set; }
        public int Active { get; set; }
        public int Inactive { get; set; }
    }
       

    protected override void OnInitialized()
    {
         Data.Add(new MyData { Workcell = "ONTO", Total = 9, Active = 0, Inactive = 9});
         
                options.DataLabels = new DataLabels
{
    Enabled = true,  // Enable data labels if they are currently off
    Style = new DataLabelsStyle
    {
        Colors = new List<string> { "#000000" } // Set color to black, or any desired color
    },
    OffsetY = -10,  // Optional: adjust label positioning if needed
};
        
        options.Legend = new Legend
            {
                Position = LegendPosition.Bottom,
                FontSize = "20px",
                HorizontalAlign =
            ApexCharts.Align.Center,
                FontWeight = "bolder"
            };

            options.Yaxis = new List<YAxis>();

        options.Yaxis.Add(new YAxis
            {
                Title = new AxisTitle { Text = "Quantity" },
                DecimalsInFloat = 0,
                TickAmount = 6,
                Labels = new YAxisLabels
                {
                    Style = new AxisLabelStyle { FontSize = "20px",  }
                }
            });


        options.Xaxis = new XAxis
            {
                Labels = new XAxisLabels
                {
                    Style = new AxisLabelStyle
                    {
                        FontSize = "18px",
                        FontWeight = "bolder",
                        @* Colors = new Color(new List<string> { "red", "blue", "Orange", "Green" }) *@
                    }
                }
            };

    }

    private void ModalClosed()
    {
        dataUri = string.Empty;
    }

    private async Task DataUri()
    {
        var options = new DataUriOptions { Width = 400 };
        dataUri = await chart.GetDataUriAsync(options);
    }



}
